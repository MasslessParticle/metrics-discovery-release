resource_types:
- name: pcf-pool
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource
  type: docker-image

resources:
- name: cf-env
  type: pcf-pool
  source:
    api_token: ((toolsmith-api-key))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment
  tags:
  - cf-denver-shared-vsphere

# - name: golang-release
#   type: git
#   source:
#     branch: master
#     uri: git@github.com:bosh-packages/golang-release
#     tag_filter: v*
#     private_key: ((loggregator-key))

- name: 24h
  source:
    interval: 24h
  type: time

- name: 5m
  source:
    interval: 5m
  type: time

- name: cf-acceptance-tests
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git
  type: git

- name: cf-deployment
  source:
    branch: master
    private_key: ((loggregator-key))
    uri: https://github.com/cloudfoundry/cf-deployment
  type: git

- name: cf-deployment-concourse-tasks
  source:
    tag_filter: v*
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
  type: git

- name: cf-deployment-concourse-tasks-image
  source:
    repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
    tag: latest
  type: docker-image

- name: cf-drain-cli
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/cf-drain-cli
  type: git

- name: concourse-tasks
  source:
    branch: master
    uri: https://github.com/pivotal-cf/concourse-tasks
  type: git

- name: loggregator-ci
  source:
    branch: master
    private_key: ((loggregator-key))
    uri: git@github.com:cloudfoundry/loggregator-ci
  type: git

- name: metrics-discovery-release
  source:
    branch: develop
    ignore_paths:
    - .final_builds
    - releases
    private_key: ((loggregator-key))
    uri: git@github.com:cloudfoundry/metrics-discovery-release.git
  type: git

- name: metrics-discovery-release-elect
  source:
    branch: release-elect
    ignore_paths:
    - .final_builds
    - releases
    private_key: ((loggregator-key))
    uri: git@github.com:cloudfoundry/metrics-discovery-release.git
  type: git

- name: metrics-discovery-release-master
  source:
    branch: master
    disable_ci_skip: true
    private_key: ((loggregator-key))
    uri: git@github.com:cloudfoundry/metrics-discovery-release.git
  type: git

- name: nats-release
  source:
    branch: release
    private_key: ((loggregator-key))
    uri: git@github.com:cloudfoundry/nats-release.git
  type: git

jobs:
################################################################################################################
#                                                Dependencies
################################################################################################################
# - name: bump-dependencies
# - name: bump-golang-release


################################################################################################################
#                                              Unit Tests
################################################################################################################
- name: metrics-discovery-tests
  plan:
  - in_parallel:
    - get: loggregator-ci
    - get: 24h
      trigger: true
    - get: metrics-discovery-release
      trigger: true
  - in_parallel:
    - file: loggregator-ci/tasks/go-test/task.yml
      input_mapping:
        source-repo: metrics-discovery-release
      task: run-tests
    # - do:
    #   - file: loggregator-ci/tasks/go-windows-tests/build-binary/task.yml
    #     input_mapping:
    #       release: metrics-discovery-release
    #     task: build-windows-test-binary
    #   - file: loggregator-ci/tasks/go-windows-tests/run-tests/task.yml
    #     task: run-windows-tests
  serial: true


################################################################################################################
#                                              CLAIM ENV AND DEPLOY
################################################################################################################
- name: claim-cfd
  plan:
  - get: metrics-discovery-release
    passed: ["metrics-discovery-tests"]
    trigger: true
  - put: cf-env
    tags:
    - cf-denver-shared-vsphere
    params:
      action: claim

- name: cf-deploy
  plan:
  - in_parallel:
    - get: loggregator-ci
    - get: cf-env
      passed: [claim-cfd]
      trigger: true
      tags:
      - cf-denver-shared-vsphere
    - get: cf-deployment
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: metrics-discovery-release
      passed:
      - metrics-discovery-tests
      trigger: true
    - get: cf-drain-cli
    - get: nats-release
  - task: grab-cf-manifest
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: latest
      inputs:
      - name: cf-env
      outputs:
      - name: cf-deployment
      run:
        path: /bin/bash
        args:
        - -c
        - |
          set -eo pipefail
          eval "$(bbl print-env --metadata-file cf-env/metadata)"

          echo "Grab CF manifest"
          bosh -d cf manifest > cf-deployment/cf-deployment.yml # change me to /cf-tmp.yml when stuff below works

          # If we want to test against windows...
          # echo "Delete CF deployment"
          # bosh delete-deployyment -d cf

          # echo "Clean up releases"
          # bosh clean-up --all

          # echo "Upload ubuntu and windows stemcells"
          # TODO: need to figure out correct stemcell version to upload
          #
          # echo "Update CF manifest with Windows ops-files"
          # bosh int cf-deployment/cf-tmp.yml \
          # -o cf-deployment/operations/windows2019-cell.yml \
          # -o cf-deployment/operations/use-compiled-releases.yml \
          # -o cf-deployment/operations/experimental/use-compiled-releases-windows.yml \
          # -o cf-deployment/operations/experimental/use-online-windows2019fs.yml > cf-deplyment/cf-deployment.yml

  - task: deploy-metrics-discovery
    file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
    input_mapping:
      release: metrics-discovery-release
      toolsmiths-env: cf-env
      ops-files: metrics-discovery-release
      vars-files: cf-deployment
    params:
      # manifests/operations/cf-add-metrics-discovery-windows.yml
      OPS_FILES: |
        manifests/operations/cf-add-metrics-discovery.yml


################################################################################################################
#                                      INTEGRATION TESTS
################################################################################################################
- name: test-releases-can-be-exported
  plan:
  - in_parallel:
    - get: concourse-tasks
    - get: cf-deployment-concourse-tasks-image
    - get: cf-env
      tags:
      - cf-denver-shared-vsphere
    - get: metrics-discovery-release
      passed:
      - cf-deploy
      trigger: true
  - do:
    - file: concourse-tasks/release/export/task.yml
      params:
        RELEASE_NAMES: |
          metrics-discovery
      task: export-releases-xenial
    - file: concourse-tasks/release/export/task.yml
      params:
        RELEASE_NAMES: |
          metrics-discovery
        STEMCELL_OS: windows2019
      task: export-releases-windows2019
    ensure:
      config:
        container_limits: {}
        inputs:
        - name: bbl-state
        params:
        platform: linux
        run:
          args:
          - -c
          - |
            set -e
            pushd "bbl-state/${BBL_STATE_DIR}" > /dev/null
              eval "$(bbl print-env)"
            popd > /dev/null

            for deployment in $(bosh deployments --column Name | grep compilation-) ; do
              bosh delete-deployment -d "$deployment" -n
            done
          path: /bin/bash
      image: cf-deployment-concourse-tasks-image
      task: clean-up
  serial: true
  serial_groups:
  - bosh-export-releases

- name: test-metrics-agent
  plan:
  - in_parallel:
    - get: loggregator-ci
    - get: cf-env
      tags:
      - cf-denver-shared-vsphere
    - get: metrics-discovery-release
      passed:
      - cf-deploy
      trigger: true
  - file: loggregator-ci/tasks/test-metrics-agent/task.yml
    params:
      METRICS_AGENT_PORT: 14726
    task: test-metrics-agent
  serial: true
  serial_groups:
  - bosh-metrics-agent

- name: metrics-smoke-test
  plan:
  - in_parallel:
    - get: loggregator-ci
    - get: cf-env
      tags:
      - cf-denver-shared-vsphere
    - get: cf-deployment-concourse-tasks-image
    - get: metrics-discovery-release
      passed:
      - cf-deploy
      trigger: true
  - config:
      container_limits: {}
      inputs:
      - name: metrics-discovery-release
        path: input-releases/metrics-discovery-release
      outputs:
      - name: releases
      platform: linux
      run:
        args:
        - -c
        - |
          set -e
          cp -a input-releases/* releases
        path: /bin/bash
    image: cf-deployment-concourse-tasks-image
    task: move-releases
  - file: loggregator-ci/tasks/check-metrics/task.yml
    input_mapping: {bbl-state: cf-env}
    params:
      JOB_BLACKLIST: |
        loggregator_agent
        loggregator_trafficcontroller
        adapter
        scheduler
        log-cache-blackbox
        log-cache-nozzle
        statsd_injector
      ORG: system
      SPACE: blackbox-testing
      STATIC_SOURCE_IDS: |
        metron
        traffic_controller
      USERNAME: admin
    task: check-metrics
  serial: true
  serial_groups:
  - bosh-metrics-test

- name: cats
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: cf-env
      tags:
      - cf-denver-shared-vsphere
    - get: loggregator-ci
    - get: cf-acceptance-tests
    - get: metrics-discovery-release
      passed:
      - cf-deploy
      trigger: true
  - task: generate-config
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: cf-env
      integration-configs: loggregator-ci
    params:
      CATS_INTEGRATION_CONFIG_FILE: cats-config.json
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      cf-acceptance-tests: cf-acceptance-tests
      integration-config: updated-integration-configs
    params:
      NODES: 9
      CONFIG_FILE_PATH: cats-config.json
    task: run-cats
  serial: true
  serial_groups:
  - bosh-cf-cats

- name: unclaim-cfd
  plan:
  - get: cf-env
    passed:
    - cats
    - metrics-smoke-test
    - test-metrics-agent
    - test-releases-can-be-exported
    trigger: true
    tags:
    - cf-denver-shared-vsphere
  - put: cf-env
    tags:
    - cf-denver-shared-vsphere
    params:
      env_file: cf-env/metadata
      action: unclaim


- name: metrics-discovery-promotion
  plan:
  - in_parallel:
    - get: develop
      passed:
      - cats
      - metrics-smoke-test
      - test-metrics-agent
      - test-releases-can-be-exported
      resource: metrics-discovery-release
      trigger: true
    - get: metrics-discovery-release-elect
  - params:
      repository: develop
    put: metrics-discovery-release-elect
  serial: true
- name: metrics-discovery-master-promotion
  plan:
  - in_parallel:
    - get: 5m
      trigger: true
    - get: metrics-discovery-release-elect
      passed:
      - metrics-discovery-promotion
      trigger: true
    - get: metrics-discovery-release-master
    - get: loggregator-ci
  - file: loggregator-ci/tasks/bumper/task.yml
    input_mapping:
      dest: metrics-discovery-release-master
      source: metrics-discovery-release-elect
    params:
      DEST_BRANCH: master
      SOURCE_BRANCH: release-elect
      TRACKER_API_TOKEN: 9a8e6bb0f9edf884e3880a540de40ad4
    task: bumper
  - params:
      repository: merged-dest
    put: metrics-discovery-release-master

################################################################################################################
#                                               Cut Releases
################################################################################################################
# - name: create-release-patch
# - name: create-release-minor
# - name: create-release-major
