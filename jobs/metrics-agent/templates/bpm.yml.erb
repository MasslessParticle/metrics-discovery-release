<%
  job_name = spec.job.name || name
  instance_id = spec.id || spec.index.to_s
  deployment = spec.deployment

  tags = {
      deployment: deployment,
      job: job_name,
      index: instance_id,
      ip: spec.ip,
  }
  tags.merge!(p("tags"))

  tag_str = tags.map { |k, v| "#{k}:#{v}" }.join(",")
  certs_dir = "/var/vcap/jobs/metrics-agent/config/certs"

  process = {
    "name" => "metrics-agent",
    "executable" => "/var/vcap/packages/metrics-agent/metrics-agent",
    "unsafe" => {
      "unrestricted_volumes" => [
        { "path" => "/var/vcap/jobs", "mount_only" => true },
        { "path" => "/var/vcap/data/jobs", "mount_only" => true },
      ],
    },
    "env" => {
      "AGENT_PORT" => "#{p("port")}",
      "AGENT_CA_FILE_PATH" => "#{certs_dir}/grpc_ca.crt",
      "AGENT_CERT_FILE_PATH" => "#{certs_dir}/grpc.crt",
      "AGENT_KEY_FILE_PATH" => "#{certs_dir}/grpc.key",
      "AGENT_TAGS" => "#{tag_str }",
      "CONFIG_GLOBS" => "#{p('config_globs').join(',')}",
      "METRICS_EXPORTER_PORT" => "#{p("metrics_exporter_port")}",
      "METRICS_PORT" => "#{p("metrics.port")}",
      "METRICS_CA_FILE_PATH" => "#{certs_dir}/metrics_ca.crt",
      "METRICS_CERT_FILE_PATH" => "#{certs_dir}/metrics.crt",
      "METRICS_KEY_FILE_PATH" => "#{certs_dir}/metrics.key",
      "WHITELISTED_TIMER_TAGS" => "#{p("metrics.whitelisted_timer_tags") }",
    }
  }

  bpm = {"processes" => [process] }
%>

<%= YAML.dump(bpm) %>
